name: Backend - Deploy to Vercel

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - staging
    paths:
      - "backend/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install
        working-directory: backend

      - name: Install Vercel CLI
        run: npm install -g vercel
        working-directory: backend

      - name: Pull Vercel Project Settings
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel pull --yes --token $VERCEL_TOKEN
        working-directory: backend

      - name: Build Project
        run: npm run build
        working-directory: backend

      - name: Deploy to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel build
          DEPLOY_URL=$(vercel --prod --token $VERCEL_TOKEN)
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
        working-directory: backend

      - name: Deploy to Vercel (Staging)
        if: github.event_name == 'pull_request' && github.base_ref == 'staging'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel build
          DEPLOY_URL=$(vercel --prebuilt --token $VERCEL_TOKEN)
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
        working-directory: backend

      - name: Create GitHub Commit Status (Production)
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPLOY_URL: ${{ env.DEPLOY_URL }}
        run: |
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d '{
              "state": "success",
              "target_url": "'$DEPLOY_URL'",
              "description": "Deploy to production is live",
              "context": "Vercel Deploy"
            }' \
            https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}

      - name: Comment on PR (Staging)
        if: success() && github.event_name == 'pull_request' && github.base_ref == 'staging'
        env:
          DEPLOY_URL: ${{ env.DEPLOY_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT="ðŸš€ Deploy staging do backend disponÃ­vel em: $DEPLOY_URL"
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -X POST \
               -d "{\"body\": \"$COMMENT\"}" \
               https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
